<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>WhatsGPT - QR Code</title>
    <link rel="stylesheet" href="/css/styles.css">
    <script src="/socket.io/socket.io.js"></script>
    <meta http-equiv="refresh" content="300"> <!-- Atualiza a página a cada 5 minutos -->
</head>
<body class="qrcode-page">
    <div class="container">
        <header>
            <h1>WhatsGPT</h1>
            <p>Por favor, escaneie o QR Code com seu WhatsApp</p>
        </header>

        <main>
            <div class="qr-container">
                <div id="qrcode-display">
                    <img id="qrcode-img" src="/images/loading.gif" alt="QR Code Loading">
                    <div id="loader" class="loader"></div>
                </div>
                <p id="status-message">Gerando QR Code...</p>
                <p id="timer" class="hidden">O QR Code expira em <span id="countdown">60</span> segundos</p>
                <button id="refresh-btn" class="hidden">Gerar novo QR Code</button>
            </div>
            <div class="instructions">
                <h2>Instruções:</h2>
                <ol>
                    <li>Abra o WhatsApp no seu telefone</li>
                    <li>Toque em <strong>Menu</strong> ou <strong>Configurações</strong></li>
                    <li>Selecione <strong>WhatsApp Web</strong></li>
                    <li>Escaneie o QR Code acima</li>
                </ol>
                <div class="status-container">
                    <p>Status da conexão: <span id="connection-status">Aguardando QR Code</span></p>
                </div>
            </div>
        </main>

        <footer>
            <p>&copy; 2023 WhatsGPT - Todos os direitos reservados</p>
        </footer>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const qrcodeImg = document.getElementById('qrcode-img');
            const statusMessage = document.getElementById('status-message');
            const timerElement = document.getElementById('timer');
            const countdownElement = document.getElementById('countdown');
            const refreshBtn = document.getElementById('refresh-btn');
            const loader = document.getElementById('loader');
            
            // Conectar ao servidor via Socket.io
            const socket = io();
            
            // Registrar no canal do usuário
            socket.on('connect', () => {
                console.log('Conectado ao servidor via Socket.io');
                // Buscar QR code inicialmente
                fetchQRCode();
            });
            
            // Escutar eventos de QR code
            socket.on('qrcode', (qrUrl) => {
                console.log('QR Code recebido via WebSocket');
                displayQRCode(qrUrl);
                startCountdown();
            });
            
            // Escutar eventos de status do WhatsApp
            socket.on('whatsappStatus', (status) => {
                console.log('Status do WhatsApp alterado:', status);
                
                if (status === 'connected') {
                    // WhatsApp conectado
                    qrcodeImg.src = '/images/connected.svg';
                    statusMessage.innerText = 'WhatsApp conectado com sucesso!';
                    statusMessage.className = 'success-message';
                    timerElement.classList.add('hidden');
                    refreshBtn.classList.add('hidden');
                    loader.classList.add('hidden');
                    
                    // Redirecionar para a página de configuração após 3 segundos
                    setTimeout(() => {
                        window.location.href = '/config';
                    }, 3000);
                } else if (status === 'disconnected') {
                    // WhatsApp desconectado
                    statusMessage.innerText = 'WhatsApp desconectado. Gerando novo QR Code...';
                    statusMessage.className = 'error-message';
                    qrcodeImg.src = '/images/loading.svg';
                    loader.classList.remove('hidden');
                    timerElement.classList.add('hidden');
                    
                    // Tentar gerar novo QR Code após 3 segundos
                    setTimeout(fetchQRCode, 3000);
                }
            });
            
            // Função para buscar QR code do servidor
            function fetchQRCode() {
                statusMessage.innerText = 'Gerando QR Code...';
                qrcodeImg.src = '/images/loading.svg';
                loader.classList.remove('hidden');
                timerElement.classList.add('hidden');
                refreshBtn.classList.add('hidden');
                
                fetch('/get-qrcode')
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            if (data.qrcode) {
                                // QR Code disponível
                                displayQRCode(data.qrcode);
                                startCountdown();
                            } else if (data.status === 'connected') {
                                // WhatsApp já conectado
                                qrcodeImg.src = '/images/connected.svg';
                                statusMessage.innerText = 'WhatsApp conectado com sucesso!';
                                statusMessage.className = 'success-message';
                                loader.classList.add('hidden');
                                
                                // Redirecionar para a página de configuração após 3 segundos
                                setTimeout(() => {
                                    window.location.href = '/config';
                                }, 3000);
                            } else {
                                // QR Code pendente, aguardando via WebSocket
                                statusMessage.innerText = 'Aguardando QR Code...';
                            }
                        } else {
                            // Erro ao obter QR Code
                            statusMessage.innerText = 'Erro ao gerar QR Code. Tente novamente.';
                            statusMessage.className = 'error-message';
                            refreshBtn.classList.remove('hidden');
                        }
                    })
                    .catch(error => {
                        console.error('Erro ao buscar QR Code:', error);
                        statusMessage.innerText = 'Erro ao comunicar com o servidor. Tente novamente.';
                        statusMessage.className = 'error-message';
                        refreshBtn.classList.remove('hidden');
                        loader.classList.add('hidden');
                    });
            }
            
            // Função para exibir o QR code
            function displayQRCode(qrUrl) {
                qrcodeImg.src = qrUrl;
                statusMessage.innerText = 'Escaneie o QR Code com seu WhatsApp';
                statusMessage.className = '';
                loader.classList.add('hidden');
                refreshBtn.classList.add('hidden');
            }
            
            // Iniciar contagem regressiva de 45 segundos
            function startCountdown() {
                let timeLeft = 45;
                countdownElement.innerText = timeLeft;
                timerElement.classList.remove('hidden');
                
                const countdownInterval = setInterval(() => {
                    timeLeft--;
                    countdownElement.innerText = timeLeft;
                    
                    if (timeLeft <= 0) {
                        clearInterval(countdownInterval);
                        statusMessage.innerText = 'QR Code expirado. Clique para gerar um novo.';
                        timerElement.classList.add('hidden');
                        refreshBtn.classList.remove('hidden');
                    }
                }, 1000);
            }
            
            // Evento de clique para o botão de atualização
            refreshBtn.addEventListener('click', fetchQRCode);
        });
    </script>
</body>
</html> 