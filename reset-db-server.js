const fs = require('fs');
const path = require('path');

// Caminho para o arquivo do banco de dados SQLite
const dbPath = path.join(__dirname, 'database.sqlite');

// Caminho para os diret√≥rios de sess√£o do WhatsApp
const sessionDir = path.join(__dirname, '.wwebjs_sessions');

function resetDatabase() {
  console.log('Iniciando o reset completo do banco de dados...');
  
  // 1. Excluir o arquivo do banco de dados SQLite
  try {
    if (fs.existsSync(dbPath)) {
      fs.unlinkSync(dbPath);
      console.log(`‚úÖ Arquivo do banco de dados exclu√≠do: ${dbPath}`);
    } else {
      console.log(`üîç Arquivo do banco de dados n√£o encontrado: ${dbPath}`);
    }
  } catch (error) {
    console.error(`‚ùå Erro ao excluir o arquivo do banco de dados: ${error.message}`);
  }
  
  // 2. Excluir diret√≥rios de sess√£o do WhatsApp (opcional - descomente se quiser limpar)
  /*
  try {
    if (fs.existsSync(sessionDir)) {
      console.log(`Removendo diret√≥rio de sess√µes: ${sessionDir}`);
      deleteFolderRecursive(sessionDir);
      console.log('‚úÖ Diret√≥rio de sess√µes removido com sucesso');
    } else {
      console.log(`üîç Diret√≥rio de sess√µes n√£o encontrado: ${sessionDir}`);
    }
  } catch (error) {
    console.error(`‚ùå Erro ao excluir diret√≥rio de sess√µes: ${error.message}`);
  }
  */
  
  console.log('Reset do banco de dados conclu√≠do!');
  console.log('Quando reiniciar o servidor, um novo banco de dados ser√° criado automaticamente.');
}

// Fun√ß√£o auxiliar para excluir diret√≥rios recursivamente
function deleteFolderRecursive(folderPath) {
  if (fs.existsSync(folderPath)) {
    fs.readdirSync(folderPath).forEach((file) => {
      const curPath = path.join(folderPath, file);
      
      if (fs.lstatSync(curPath).isDirectory()) {
        // Se for um diret√≥rio, chama a fun√ß√£o recursivamente
        deleteFolderRecursive(curPath);
      } else {
        // Se for um arquivo, exclui
        fs.unlinkSync(curPath);
      }
    });
    
    // Depois de excluir todo o conte√∫do, remove o diret√≥rio
    fs.rmdirSync(folderPath);
  }
}

// Executar o reset
resetDatabase(); 